// define a variable to import the <Verifier> or <renamedVerifier> solidity contract generated by Zokrates
const Verifier = artifacts.require('Verifier')
contract('Verifier', accounts => {
   // - use the contents from proof.json generated from zokrates steps
    const { proof, input } = require('../../zokrates/code/square/proof.json')
    beforeEach(async () => {
      this.contract = await Verifier.new({ from: accounts[0] })
     
    })
 // Test verification with correct proof
 it('VerifyTx returns true with correct proof', async () => {
    const result = await this.contract.verifyTx(
      proof.A,
      proof.A_p,
      proof.B,
      proof.B_p,
      proof.C,
      proof.C_p,
      proof.H,
      proof.K,
      input
    )
  assert(result, 'Wrong proof check result')
  })

// Test verification with incorrect proof
it('VerifyTx returns false with incorrect proof', async () => {
    const inp=[25,1] // wrong input to create a failed verification
    const result = await this.contract.verifyTx.call(
    proof.A,
    proof.A_p,
    proof.B,
    proof.B_p,
    proof.C,
    proof.C_p,
    proof.H,
    proof.K,
    inp
  )
  assert(!result, 'Proof check result should be false')
})
})

 

    


